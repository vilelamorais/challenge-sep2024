name: Build and Deploy Docker Image to ECR and Deploy Helm Chart to EKS

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        description: AWS access key for github actions
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: AWS secret keu for github actions
        required: true
    inputs:
      cluster_name: 
        description: Cluster Kubernetes name to deploy to
        type: string
        required: true
      repository:
        description: AWS ECR repository name
        type: string
        required: true
      app_name:
        description: Application name
        type: string
        required: true
      helm_path:
        default: helm-chart
        description: Helm chart directory
        type: string
        required: true
      platform:
        default: linux/amd64
        description: processor architecture
        type: string
        required: false
      recreate_pods:
        default: true
        description: Set --recreate-pods option for helm install
        type: boolean
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            DOCKER_TAG=latest
          fi
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            DOCKER_TAG=develop
          fi
          docker buildx build --platform ${{ inputs.platform }} -t ${{ env.REGISTRY }}/${{ inputs.repository }}:$IMAGE_TAG .
          docker tag      ${{ env.REGISTRY }}/${{ inputs.repository }}:$IMAGE_TAG \
                          ${{ env.REGISTRY }}/${{ inputs.repository }}:$DOCKER_TAG
          docker push     ${{ env.REGISTRY }}/${{ inputs.repository }}:$IMAGE_TAG
          docker push     ${{ env.REGISTRY }}/${{ inputs.repository }}:$DOCKER_TAG

  deploy-to-eks:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update K8s context
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ inputs.cluster_name }}

      - name: Deploy to EKS
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            NAMESPACE=production
            DEPLOY_TAG=latest
            VALUES_FILE=values-prd.yaml
          fi
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            NAMESPACE=develop
            DEPLOY_TAG=develop
            VALUES_FILE=values-dev.yaml
          fi
          if [ "${{ inputs.recreate_pods }}" = "true" ]; then
            helm upgrade \
              --install ${{ inputs.app_name }} ./${{ inputs.helm_path }} \
              --recreate-pods \
              --values ./${{ inputs.helm_path }}/$VALUES_FILE \
              --namespace $NAMESPACE \
              --set image.tag=$DEPLOY_TAG
          else
            helm upgrade \
              --install ${{ inputs.app_name }} ./${{ inputs.helm_path }} \
              --values ./${{ inputs.helm_path }}/$VALUES_FILE \
              --namespace $NAMESPACE \
              --set image.tag=$DEPLOY_TAG
          fi
